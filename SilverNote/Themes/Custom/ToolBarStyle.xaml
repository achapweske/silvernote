<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!-- Resources -->
        <ResourceDictionary Source="Common.xaml"/>
        <ResourceDictionary>
            <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#EEE"/>
            
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!-- ToolBarButtonBaseTemplate -->
    <ControlTemplate x:Key="ToolBarButtonBaseTemplate" TargetType="{x:Type ButtonBase}">
        <!-- Border -->
        <Border 
              x:Name="Border"  
              Padding="{TemplateBinding Padding}"
              BorderThickness="1"
              Background="Transparent"
              BorderBrush="Transparent">
            <!-- Content -->
            <ContentPresenter 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
            </Trigger>
            <Trigger Property="CheckBox.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ToolBarButtonBaseStyle -->
    <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource ToolBarButtonBaseTemplate}"/>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type Button}"/>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type ToggleButton}"/>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type CheckBox}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type RadioButton}"/>

    <!-- ToolBarTextBoxTemplate -->
    <ControlTemplate x:Key="ToolBarTextBoxTemplate"  TargetType="{x:Type TextBox}">
        <!-- Border -->
        <Border 
            Name="Border"
            Padding="2"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <!-- Content -->
            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- ToolBar.TextBoxStyleKey -->
    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template" Value="{StaticResource ToolBarTextBoxTemplate}"/>
    </Style>

    <!-- ToolBarThumbTemplate -->
    <ControlTemplate x:Key="ToolBarThumbTemplate" TargetType="{x:Type Thumb}">
        <!-- Border -->
        <Border Background="Transparent" SnapsToDevicePixels="True">
            <!-- Glyph -->
            <Rectangle Margin="0,2">
                <Rectangle.Fill>
                    <DrawingBrush Viewport="0,0,4,4" 
                        ViewportUnits="Absolute"
                        Viewbox="0,0,8,8"
                        ViewboxUnits="Absolute"
                        TileMode="Tile">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="#AAA" Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Border>
    </ControlTemplate>
    
    <!-- ToolBarThumbStyle -->
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="SizeAll"/>
        <Setter Property="Template" Value="{StaticResource ToolBarThumbTemplate}"/>
    </Style>

    <!-- ToolBarOverflowButtonTemplate -->
    <ControlTemplate x:Key="ToolBarOverflowButtonTemplate" TargetType="{x:Type ToggleButton}">
        <!-- Border -->
        <Border Name="Bd"
            CornerRadius="0,3,3,0"
            Background="Transparent"
            SnapsToDevicePixels="true">
            <!-- Arrow -->
            <Grid>
                <Path Name="Arrow"
                      Fill="Black"
                      VerticalAlignment="Bottom"
                      Margin="2,3"
                      Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                <ContentPresenter/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Arrow" Property="Fill" Value="#AAA"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ToolBarOverflowButtonTemplate -->
    <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template"  Value="{StaticResource ToolBarOverflowButtonTemplate}"/>
    </Style>

    
    <!-- ToolBarTemplate -->
    <ControlTemplate x:Key="ToolBarTemplate" TargetType="{x:Type ToolBar}">
        <!-- Border -->
        <Border x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="0"
            Background="Transparent"
            BorderBrush="{x:Null}">
            <DockPanel >
                <!-- Overflow Button -->
                <ToggleButton DockPanel.Dock="Right"
                    IsEnabled="{TemplateBinding HasOverflowItems}"
                    Style="{StaticResource ToolBarOverflowButtonStyle}"
                    IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                    ClickMode="Press">
                    <!-- Overflow Popup -->
                    <Popup x:Name="OverflowPopup"
                        AllowsTransparency="true"
                        Placement="Bottom"
                        IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                        StaysOpen="false"
                        Focusable="false"
                        PopupAnimation="Slide">
                        <!-- Overflow Popup border -->
                        <Border x:Name="DropDownBorder"
                            Background="{StaticResource WindowBackgroundBrush}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource SolidBorderBrush}">
                            <!-- Overflow Popup content -->
                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                Margin="2"
                                WrapWidth="200"
                                Focusable="true" 
                                FocusVisualStyle="{x:Null}"
                                KeyboardNavigation.TabNavigation="Cycle"
                                KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </Popup>
                </ToggleButton>

                <!-- Thumb -->
                <Thumb x:Name="ToolBarThumb"
                    Style="{StaticResource ToolBarThumbStyle}"
                    Width="10"/>
                
                <!-- Content -->
                <ToolBarPanel x:Name="PART_ToolBarPanel"
                    IsItemsHost="true"
                    Margin="0,1,2,2"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen" Value="true">
                <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ToolBar Style -->
    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template" Value="{StaticResource ToolBarTemplate}" />
    </Style>

    <!-- ToolBarTray Style -->
    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" Value="{StaticResource HorizontalLightBrush}"/>
    </Style>

</ResourceDictionary>